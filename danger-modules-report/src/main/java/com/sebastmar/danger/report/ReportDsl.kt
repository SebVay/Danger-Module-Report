@file:Suppress("MemberVisibilityCanBePrivate")

package com.sebastmar.danger.report

import com.sebastmar.danger.report.info.Module
import com.sebastmar.danger.report.interceptor.ModulesInterceptor
import com.sebastmar.danger.report.interceptor.NoOpModulesInterceptor

@DslMarker
public annotation class ReportDsl

/**
 * A builder class for configuring reports.
 *
 * This class provides a DSL for configuring various aspects of a report,
 * such as whether to write sections and how to intercept modules.
 */
@ReportDsl
public class ReportConfigBuilder internal constructor() {
    /**
     * A text to be displayed at the top of the report, markdown compatible.
     *
     * By default: `# Updated Modules`
     *
     * If set to `null`, no top section will be displayed.
     */
    public var topSection: String? = "# Updated Modules"

    /**
     * A text to be displayed at the bottom of the report, markdown compatible.
     *
     * By default: `null` (no bottom section will be displayed)
     *
     * If set to a String, this text will be displayed at the bottom of the report.
     */
    @Suppress("MaxLineLength")
    public var bottomSection: String? =
        "_Generated by [danger-modules-report](https://github.com/SebVay/Danger-Module-Report)_ with ❤️"

    /**
     * Determines whether links to the diff page for each file are added to the report.
     * When `true`, links are added. When `false`, links are omitted.
     * Defaults to `true`.
     */
    public var linkifyFiles: Boolean = true

    /**
     * Toggles whether circle indicators are displayed to the left of each file name.
     * Default value is `true`.
     */
    public var showCircleIndicators: Boolean = true

    /**
     * Toggles whether the (+/-) ine indicator is displayed to next to the "Added", "Modified", "Deleted" sections.
     * Default value is `true`.
     */
    public var showLineIndicators: Boolean = true

    /**
     * Allows modules to be intercepted, modified, or omitted from the report.
     * By default, this is a [NoOpModulesInterceptor] which performs no interception.
     * @see ModulesInterceptor
     */
    private var modulesInterceptor: ModulesInterceptor = NoOpModulesInterceptor

    /**
     * Sets an interceptor for the list of modules used in the report generation process.
     *
     * The interceptor allows for customization of the modules list by modifying or filtering
     * the modules before they are processed further.
     *
     * Example:
     * ```kotlin
     * modulesInterceptor { modules ->
     *     modules.filterNot { it.name == "internal-module" } // Exclude a specific module
     * }
     * ```
     *
     * @param block A lambda function that takes the current list of [Module]s as input
     *              and returns a new, possibly modified, list of [Module]s.
     *              The returned list will be used for report generation.
     */
    public fun modulesInterceptor(block: (List<Module>) -> List<Module>) {
        modulesInterceptor = ModulesInterceptor(block)
    }

    /**
     * If the PR description contains these keywords, the report generation will be skipped.
     * Default value is `danger-modules-no-report`.
     */
    public var skipReportKeyword: String = "danger-modules-no-report"

    internal fun build(): ReportConfig = ReportConfig(
        topSection = topSection,
        bottomSection = bottomSection,
        linkifyFiles = linkifyFiles,
        showCircleIndicators = showCircleIndicators,
        showLineIndicators = showLineIndicators,
        modulesInterceptor = modulesInterceptor,
        skipReportKeyword = skipReportKeyword,
    )
}

/**
 * Represents the configuration of the report generator.
 *
 * @property topSection A text to be displayed at the top of the report, markdown compatible.
 * @property bottomSection A text to be displayed at the bottom of the report, markdown compatible.
 * @property linkifyFiles Whether to convert file names to links to their diffs.
 * @property showCircleIndicators Whether to show circle indicators next to file names.
 * @property showLineIndicators Whether to show the (+/-) line indicators in the header sections.
 * @property modulesInterceptor Allows modules to be intercepted, modified, or omitted from the report.
 * @property skipReportKeyword The keyword to look for in description to skip the report generation.
 */
internal data class ReportConfig(
    val topSection: String?,
    val bottomSection: String?,
    val linkifyFiles: Boolean,
    val showCircleIndicators: Boolean,
    val showLineIndicators: Boolean,
    val modulesInterceptor: ModulesInterceptor,
    val skipReportKeyword: String,
)
